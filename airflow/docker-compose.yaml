
x-airflow-common: &airflow-common
  image: apache/airflow:2.9.2
  env_file: .env
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASS}@${AIRFLOW_DB_HOST}:${AIRFLOW_DB_PORT}/${AIRFLOW_DB_NAME}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
    AIRFLOW__CORE__DEFAULT_TIMEZONE: ${TZ}
    DB_URL: ${DB_URL}
  volumes:
    - airflow_local_site:/home/airflow/.local
    - ./dags:/opt/airflow/dags
    - ./requirements.txt:/requirements.txt
    - ..:/opt/project
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    airflow-postgres:
      condition: service_healthy

services:
  airflow-postgres:
    image: postgres:15
    container_name: airflow-meta-pg
    env_file: .env        # ✨ 추가
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASS}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AIRFLOW_DB_USER} -d ${AIRFLOW_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r /requirements.txt
        airflow db migrate
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer

volumes:
  airflow_local_site: {}